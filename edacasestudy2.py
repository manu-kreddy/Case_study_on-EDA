# -*- coding: utf-8 -*-
"""EDAcasestudy2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N9nhHs55lWjREHPlcJvigL_WsjL-yXnb
"""

# Step 1

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/commodity_prices.csv')

display(df)

df.info()

df

df.isnull()

df.isnull().sum()

df.isnull().sum().sum()

df.duplicated()

df.duplicated().sum()

print(df.duplicated().sum())

"""# What is the maximum and minimum price of Robusta coffee from 1960 to 2022 ? # Print the data between the 1960 to 1980

"""

df['coffee_robustas'].max()

df['coffee_robustas'].min()

df

df[(df['date']>='1960-01-01') & (df['date']<='1980-12-01')]

"""compare price trends of arabica and robusta coffee.which is more volatile?

"""

sns.barplot(x='coffee_arabica',y='coffee_robustas',data=df)

sns.boxplot(x='coffee_arabica',y='coffee_robustas',data=df)

df.dropna()

df = pd.read_csv('/commodity_prices.csv')

df.dropna().sum()

df.dropna(inplace=True)

display(df)

df.fillna(inplace=True)

df.fillna({'oil_brent':50},inplace=True)

df.display()

display(df)

"""#  Compare price trends of Arabica vs Robusta coffee. Which is more volatile?"""

df.columns

sns.boxplot(x='coffee_arabica',y='coffee_robustas',data=df)

sns.lineplot(x='coffee_arabica',y='coffee_robustas',data=df)

df["date"].value_counts().sum()

df[["date","coffee_arabica","coffee_robustas"]].set_index("date").plot()

a=df['coffee_robustas'].std()

b=df['coffee_arabica'].std()

max(a,b)

"""# Plot the trend of sugar_world prices over time."""

df[["date","sugar_world"]].set_index("date").plot()

#or we can do like this
sns.lineplot(x = "date",y="sugar_world",data=df)

"""# Which commodity has the highest average price over the full dataset?"""

df.columns

avg_prices=df[['oil_brent', 'oil_dubai', 'coffee_arabica',
       'coffee_robustas', 'tea_columbo', 'tea_kolkata', 'tea_mombasa',
       'sugar_eu', 'sugar_us', 'sugar_world']].mean().sort_values(ascending=False)

display(avg_prices)

display(max(avg_prices))

sns.barplot(x=avg_prices.index,y=avg_prices.values)

avg_prices.plot(kind='bar',color='lavender',figsize=(10,5),title='average prices of all comodities')

"""# Create a new column indicating whether tea_columbo price was above average."""

df.columns

df['new_column'] =

# Example of adding a new column with a list
df['new_column'] = [i for i in range(len(df))]
display(df.head())

# Example of adding a new column with a Series
# df['another_new_column'] = pd.Series(np.random.randn(len(df)))
# display(df.head())

import os
import numpy as np
list_1 = [1,2,3,4,5,6,7]
print(list_1)
array_1= numpy.array(list_1,datatype=int)
print(array_1)

string="Machine Learning"
string[slice(8,13,1)]

num1 =5**4
num2 = pow(5,4)
print(num1,num2)

x="string"
int(x)

x=ID-5632
print(type(x))

